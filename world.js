const quizData = [
  {
    question: "‡≤ê‡≤´‡≥Ü‡≤≤‡≥ç ‡≤ü‡≤µ‡≤∞‡≥ç ‡≤Ø‡≤æ‡≤µ ‡≤®‡≤ó‡≤∞‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø‡≤¶‡≥Ü?",
    options: ["‡≤∞‡≥ã‡≤Æ‡≥ç", "‡≤≤‡≤Ç‡≤°‡≤®‡≥ç", "‡≤™‡≥ç‡≤Ø‡≤æ‡≤∞‡≤ø‡≤∏‡≥ç", "‡≤¨‡≤∞‡≥ç‡≤≤‡≤ø‡≤®‡≥ç"],
    correctAnswer: "‡≤™‡≥ç‡≤Ø‡≤æ‡≤∞‡≤ø‡≤∏‡≥ç",
  },
  {
    question: "‡≤ö‡≥Ä‡≤®‡≤æ‡≤¶ ‡≤Æ‡≤π‡≤æ‡≤ó‡≥ã‡≤°‡≥Ü‡≤Ø ‡≤â‡≤¶‡≥ç‡≤¶‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Ö‡≤Ç‡≤¶‡≤æ‡≤ú‡≥Å ‡≤Æ‡≤æ‡≤°‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü:",
    options: ["5,000 ‡≤ï‡≤ø‡≤Æ‡≥Ä", "10,000 ‡≤ï‡≤ø‡≤Æ‡≥Ä", "15,000 ‡≤ï‡≤ø‡≤Æ‡≥Ä", "20,000 ‡≤ï‡≤ø‡≤Æ‡≥Ä"],
    correctAnswer: "20,000 ‡≤ï‡≤ø‡≤Æ‡≥Ä",
  },
  {
    question: "‡≤∏‡≥ç‡≤µ‡≤§‡≤Ç‡≤§‡≥ç‡≤∞‡≥ç‡≤Ø‡≤¶ ‡≤™‡≥ç‡≤∞‡≤§‡≤ø‡≤ï‡≥Ü‡≤Ø‡≤æ‡≤¶ Statue of Liberty ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø‡≤¶‡≥Ü?",
    options: ["‡≤ï‡≥Ü‡≤®‡≤°‡≤æ", "‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï", "‡≤´‡≥ç‡≤∞‡≤æ‡≤®‡≥ç‡≤∏‡≥ç", "‡≤á‡≤Ç‡≤ó‡≥ç‡≤≤‡≥Ü‡≤Ç‡≤°‡≥ç"],
    correctAnswer: "‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï",
  },
  {
    question: "‡≤¨‡≤∞‡≥ç‡≤ú‡≤ø ‡≤ñ‡≤≤‡≤ø‡≤´‡≤æ ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤á‡≤¶‡≥Ü?",
    options: ["‡≤∏‡≥å‡≤¶‡≤ø ‡≤Ö‡≤∞‡≥á‡≤¨‡≤ø‡≤Ø‡≤æ", "‡≤¶‡≥Å‡≤¨‡≥à (‡≤Ø‡≥Å‡≤é‡≤á)", "‡≤á‡≤ú‡≤ø‡≤™‡≥ç‡≤ü‡≥ç", "‡≤á‡≤∞‡≤æ‡≤®‡≥ç"],
    correctAnswer: "‡≤¶‡≥Å‡≤¨‡≥à (‡≤Ø‡≥Å‡≤é‡≤á)",
  },
  {
    question:
      "‡≤Æ‡≥ä‡≤¶‡≤≤ ‡≤Æ‡≤π‡≤æ‡≤Ø‡≥Å‡≤¶‡≥ç‡≤ß‡≤¶ ‡≤∏‡≥ç‡≤Æ‡≤æ‡≤∞‡≤ï ‡≤Ø‡≥Å‡≤¶‡≥ç‡≤ß‡≤¶ ‡≤∏‡≥ç‡≤•‡≤≥ (Battlefield of Somme) ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø‡≤¶‡≥Ü?",
    options: ["‡≤´‡≥ç‡≤∞‡≤æ‡≤®‡≥ç‡≤∏‡≥ç", "‡≤ú‡≤∞‡≥ç‡≤Æ‡≤®‡≤ø", "‡≤á‡≤ü‡≤≤‡≤ø", "‡≤™‡≥ã‡≤≤‡≥ç‡≤Ø‡≤æ‡≤Ç‡≤°‡≥ç"],
    correctAnswer: "‡≤´‡≥ç‡≤∞‡≤æ‡≤®‡≥ç‡≤∏‡≥ç",
  },
  {
    question: "‡≤Æ‡≤æ‡≤ö‡≥Å ‡≤™‡≤ø‡≤ö‡≥Å ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤á‡≤¶‡≥Ü?",
    options: ["‡≤¨‡≥ä‡≤≤‡≤ø‡≤µ‡≤ø‡≤Ø‡≤æ", "‡≤™‡≥Ü‡≤∞‡≥Ç", "‡≤ö‡≤ø‡≤≤‡≤ø", "‡≤Ö‡≤∞‡≥ç‡≤ú‡≥Ü‡≤Ç‡≤ü‡≤ø‡≤®‡≤æ"],
    correctAnswer: "‡≤™‡≥Ü‡≤∞‡≥Ç",
  },
  {
    question: "‡≤Ö‡≤≤‡≥ç‡≤π‡≤æ‡≤Ç‡≤¨‡≥ç‡≤∞‡≤æ ‡≤™‡≥ç‡≤Ø‡≤æ‡≤≤‡≥Ü‡≤∏‡≥ç ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤á‡≤¶‡≥Ü?",
    options: ["‡≤™‡≥ã‡≤∞‡≥ç‡≤ö‡≥Å‡≤ó‡≤≤‡≥ç", "‡≤á‡≤ü‡≤≤‡≤ø", "‡≤∏‡≥ç‡≤™‡≥á‡≤®‡≥ç", "‡≤ó‡≥ç‡≤∞‡≥Ä‡≤∏‡≥ç"],
    correctAnswer: "‡≤∏‡≥ç‡≤™‡≥á‡≤®‡≥ç",
  },
  {
    question: "‡≤ï‡≥ä‡≤≤‡≥ä‡≤∏‡≤ø‡≤Ø‡≤Æ‡≥ç ‡≤∞‡≥ã‡≤Æ‡≥ç ‡≤Ø‡≤æ‡≤µ ‡≤ï‡≤æ‡≤≤‡≤¶ ‡≤∏‡≥ç‡≤Æ‡≤æ‡≤∞‡≤ï‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü?",
    options: ["‡≤ó‡≥ç‡≤∞‡≥Ä‡≤ï‡≥ç ‡≤ï‡≤æ‡≤≤", "‡≤∞‡≥ã‡≤Æ‡≤®‡≥ç ‡≤∏‡≤æ‡≤Æ‡≥ç‡≤∞‡≤æ‡≤ú‡≥ç‡≤Ø", "‡≤Æ‡≤ß‡≥ç‡≤Ø‡≤Ø‡≥Å‡≤ó", "‡≤Æ‡≥ã‡≤°‡≤∞‡≥ç‡≤®‡≥ç ‡≤ï‡≤æ‡≤≤"],
    correctAnswer: "‡≤∞‡≥ã‡≤Æ‡≤®‡≥ç ‡≤∏‡≤æ‡≤Æ‡≥ç‡≤∞‡≤æ‡≤ú‡≥ç‡≤Ø",
  },
  {
    question:
      "‡≤§‡≤æ‡≤ú‡≤æ ‡≤®‡≥Ä‡≤∞‡≤ø‡≤® ‡≤ú‡≤≤‡≤™‡≤æ‡≤§‡≤ó‡≤≥‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤¶‡≥ä‡≤°‡≥ç‡≤° ‡≤Ø‡≥Å‡≤¶‡≥ç‡≤ß‡≤¶ ‡≤∏‡≥ç‡≤•‡≤≥ ‡≤®‡≤Ø‡≤æ‡≤ó‡≤∞ ‡≤´‡≤æ‡≤≤‡≥ç‡≤∏‡≥ç ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤ó‡≤≥‡≤≤‡≥ç‡≤≤‡≤ø ‡≤á‡≤¶‡≥Ü?",
    options: [
      "‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ-‡≤ï‡≥Ü‡≤®‡≤°‡≤æ",
      "‡≤ï‡≥Ü‡≤®‡≤°‡≤æ-‡≤Æ‡≥Ü‡≤ï‡≥ç‡≤∏‡≤ø‡≤ï‡≥ã",
      "‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ-‡≤Æ‡≥Ü‡≤ï‡≥ç‡≤∏‡≤ø‡≤ï‡≥ã",
      "‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ-‡≤ö‡≥Ä‡≤®‡≤æ",
    ],
    correctAnswer: "‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ-‡≤ï‡≥Ü‡≤®‡≤°‡≤æ",
  },
  {
    question: "‡≤∏‡≤ø‡≤°‡≥ç‡≤®‡≤ø ‡≤ì‡≤™‡≥Ü‡≤∞‡≤æ ‡≤π‡≥å‡≤∏‡≥ç ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤á‡≤¶‡≥Ü?",
    options: ["‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ", "‡≤Ü‡≤∏‡≥ç‡≤ü‡≥ç‡≤∞‡≥á‡≤≤‡≤ø‡≤Ø‡≤æ", "‡≤ï‡≥ç‡≤Ø‡≤æ‡≤®‡≤°‡≤æ", "‡≤á‡≤Ç‡≤ó‡≥ç‡≤≤‡≥Ü‡≤Ç‡≤°‡≥ç"],
    correctAnswer: "‡≤Ü‡≤∏‡≥ç‡≤ü‡≥ç‡≤∞‡≥á‡≤≤‡≤ø‡≤Ø‡≤æ",
  },
  {
    question:
      "‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ‡≤¶ ‡≤∏‡≤æ‡≤µ‡≥Å‡≤®‡≥ç‡≤® ‡≤π‡≤∏‡≤ø‡≤∞‡≥Å ‡≤™‡≥ç‡≤∞‡≤¶‡≥á‡≤∂ ‡≤∏‡≤π‡≤æ‡≤∞‡≤æ ‡≤Æ‡≤∞‡≥Å‡≤≠‡≥Ç‡≤Æ‡≤ø‡≤Ø‡≥Å ‡≤™‡≥ç‡≤∞‡≤∏‡≤ø‡≤¶‡≥ç‡≤ß‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü. ‡≤á‡≤¶‡≥Å ‡≤Ø‡≤æ‡≤µ ‡≤∏‡≥ç‡≤•‡≤≥‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤∏‡≥á‡≤∞‡≤ø‡≤¶‡≥Ü?",
    options: [
      "‡≤â‡≤§‡≥ç‡≤§‡≤∞ ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ",
      "‡≤¶‡≤ï‡≥ç‡≤∑‡≤ø‡≤£ ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ",
      "‡≤™‡≤∂‡≥ç‡≤ö‡≤ø‡≤Æ ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ",
      "‡≤ï‡≥á‡≤Ç‡≤¶‡≥ç‡≤∞ ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ",
    ],
    correctAnswer: "‡≤â‡≤§‡≥ç‡≤§‡≤∞ ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ",
  },
  {
    question:
      "‡≤ú‡≤™‡≤æ‡≤®‡≥ç ‡≤¶‡≥á‡≤∂‡≤¶ ‡≤™‡≥ç‡≤∞‡≤∏‡≤ø‡≤¶‡≥ç‡≤ß ‡≤™‡≤∞‡≥ç‡≤µ‡≤§ ‡≤´‡≥Å‡≤ú‡≤ø‡≤Ø‡≥Å‡≤ï‡≤ø‡≤Ø‡≥Å (‡≤Æ‡≥å‡≤Ç‡≤ü‡≥ç ‡≤´‡≥Å‡≤ú‡≤ø) ‡≤Ø‡≤æ‡≤µ‡≤æ‡≤ó‡≤≤‡≥Ç ‡≤ñ‡≥ç‡≤Ø‡≤æ‡≤§‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü:",
    options: [
      "‡≤§‡≥Ä‡≤µ‡≥ç‡≤∞ ‡≤¨‡≤Ç‡≤°‡≥Ü",
      "‡≤®‡≤ø‡≤∑‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø ‡≤ú‡≥ç‡≤µ‡≤æ‡≤≤‡≤æ‡≤Æ‡≥Å‡≤ñ‡≤ø",
      "‡≤ó‡≥ç‡≤≤‡≥á‡≤∂‡≤ø‡≤Ø‡≤∞‡≥ç ‡≤™‡≤∞‡≥ç‡≤µ‡≤§",
      "‡≤ï‡≤æ‡≤°‡≥Å ‡≤™‡≤∞‡≥ç‡≤µ‡≤§",
    ],
    correctAnswer: "‡≤®‡≤ø‡≤∑‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø ‡≤ú‡≥ç‡≤µ‡≤æ‡≤≤‡≤æ‡≤Æ‡≥Å‡≤ñ‡≤ø",
  },
  {
    question: "‡≤π‡≥ã‡≤µ‡≤∞‡≥ç‡≤°‡≤æ‡≤®‡≥ç ‡≤µ‡≤æ‡≤≤‡≥ç ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶ ‡≤ê‡≤§‡≤ø‡≤π‡≤æ‡≤∏‡≤ø‡≤ï ‡≤ó‡≥ã‡≤°‡≥Ü‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü?",
    options: ["‡≤∏‡≥ç‡≤ï‡≤æ‡≤ü‡≥ç‚Äå‡≤≤‡≥ç‡≤Ø‡≤æ‡≤Ç‡≤°‡≥ç", "‡≤á‡≤Ç‡≤ó‡≥ç‡≤≤‡≥Ü‡≤Ç‡≤°‡≥ç", "‡≤Ü‡≤Ø‡≤∞‡≥ç‡≤≤‡≥Ü‡≤Ç‡≤°‡≥ç", "‡≤µ‡≥Ü‡≤≤‡≥ç‡≤∏‡≥ç"],
    correctAnswer: "‡≤á‡≤Ç‡≤ó‡≥ç‡≤≤‡≥Ü‡≤Ç‡≤°‡≥ç",
  },
  {
    question: "‡≤™‡≥Ü‡≤ü‡≥ç‡≤∞‡≤æ, ‡≤™‡≥ç‡≤∞‡≤æ‡≤ö‡≥Ä‡≤® ‡≤™‡≤ø‡≤Ç‡≤ï‡≥ç ‡≤∂‡≤π‡≤∞‡≤µ‡≥Å ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤á‡≤¶‡≥Ü?",
    options: ["‡≤Æ‡≥Ç‡≤∞‡≤æ‡≤ï‡≥ä", "‡≤ú‡≥ã‡≤∞‡≥ç‡≤°‡≤æ‡≤®‡≥ç", "‡≤§‡≥Å‡≤®‡≥Ä‡≤∑‡≥ç‡≤Ø‡≤æ", "‡≤à‡≤ú‡≤ø‡≤™‡≥ç‡≤ü‡≥ç"],
    correctAnswer: "‡≤ú‡≥ã‡≤∞‡≥ç‡≤°‡≤æ‡≤®‡≥ç",
  },
  {
    question: "‡≤ê‡≤§‡≤ø‡≤π‡≤æ‡≤∏‡≤ø‡≤ï '‡≤°‡≤Ø‡≤æ‡≤Æ‡≤Ç‡≤°‡≥ç‚Äå‡≤π‡≥Ü‡≤°‡≥ç ‡≤ï‡≥ç‡≤∞‡≥á‡≤ü‡≤∞‡≥ç' ‡≤Ø‡≤æ‡≤µ ‡≤¶‡≥á‡≤∂‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤á‡≤¶‡≥Ü?",
    options: ["‡≤ú‡≤™‡≤æ‡≤®‡≥ç", "‡≤π‡≤µ‡≤æ‡≤Ø‡≤ø (‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ)", "‡≤®‡≥ç‡≤Ø‡≥Ç‡≤ú‡≤ø‡≤≤‡≥ç‡≤Ø‡≤æ‡≤Ç‡≤°‡≥ç", "‡≤´‡≤ø‡≤≤‡≤ø‡≤´‡≥à‡≤®‡≥ç‡≤∏‡≥ç"],
    correctAnswer: "‡≤π‡≤µ‡≤æ‡≤Ø‡≤ø (‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ)",
  },
];

let currentQuestion = 0;
let score = 0;

const questionEl = document.getElementById("question");
const optionsEl = document.getElementById("options");
const resultEl = document.getElementById("result");
const restartBtn = document.getElementById("restart-btn");

function loadQuestion() {
  const currentQuizData = quizData[currentQuestion];
  questionEl.innerText = currentQuizData.question;

  optionsEl.innerHTML = "";
  currentQuizData.options.forEach((option) => {
    const button = document.createElement("div");
    button.innerText = option;
    button.classList.add("option");
    button.addEventListener("click", selectAnswer);
    optionsEl.appendChild(button);
  });
}

function selectAnswer(e) {
  const selectedBtn = e.target;
  const correct = quizData[currentQuestion].correctAnswer;

  Array.from(optionsEl.children).forEach((button) => {
    button.disabled = true;
    if (button.innerText === correct) {
      button.classList.add("correct");
    }
    if (button === selectedBtn && selectedBtn.innerText !== correct) {
      button.classList.add("incorrect");
    }
  });

  if (selectedBtn.innerText === correct) {
    score++;
  }

  setTimeout(() => {
    currentQuestion++;
    if (currentQuestion < quizData.length) {
      loadQuestion();
    } else {
      showResults();
    }
  }, 1000);
}

function showResults() {
  questionEl.style.display = "none";
  optionsEl.style.display = "none";
  resultEl.innerHTML = `‡≤®‡≥Ä‡≤µ‡≥Å ${quizData.length} ‡≤∞‡≤≤‡≥ç‡≤≤‡≤ø ${score} ‡≤Ö‡≤Ç‡≤ï‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤ó‡≤≥‡≤ø‡≤∏‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤ø!`;
  restartBtn.style.display = "block";
  restartBtn.addEventListener("click", restartQuiz);
}

function restartQuiz() {
  currentQuestion = 0;
  score = 0;
  questionEl.style.display = "block";
  optionsEl.style.display = "grid";
  resultEl.innerHTML = "";
  restartBtn.style.display = "none";
  loadQuestion();
}

// Question numbers
function loadQuestion() {
  const currentQuizData = quizData[currentQuestion];
  // Add question number before the question text
  questionEl.innerText = `${currentQuestion + 1}. ${currentQuizData.question}`;

  optionsEl.innerHTML = "";
  currentQuizData.options.forEach((option) => {
    const button = document.createElement("div");
    button.innerText = option;
    button.classList.add("option");
    button.addEventListener("click", selectAnswer);
    optionsEl.appendChild(button);
  });
}

// Start the quiz
loadQuestion();
// Calculate the score
function showResults() {
  questionEl.style.display = "none";
  optionsEl.style.display = "none";

  // Celebration logic
  if (score >= 10) {
    // High score celebration
    resultEl.innerHTML = `
      <div class="celebration">
        <h2>üéâ ‡≤Ö‡≤≠‡≤ø‡≤®‡≤Ç‡≤¶‡≤®‡≥Ü‡≤ó‡≤≥‡≥Å! üèÜ</h2>
        <p>‡≤®‡≥Ä‡≤µ‡≥Å ${quizData.length} ‡≤∞‡≤≤‡≥ç‡≤≤‡≤ø ${score} ‡≤Ö‡≤Ç‡≤ï‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤ó‡≤≥‡≤ø‡≤∏‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤ø!</p>
        <div class="confetti-container">
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
        </div>
      </div>
    `;
    // Add animation styles
    const styleEl = document.createElement("style");
    styleEl.innerHTML = `
      .celebration {
        text-align: center;
        position: relative;
        overflow: hidden;
        padding: 20px;
      }
      .confetti-container {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
      }
      .confetti {
        width: 15px;
        height: 15px;
        background-color: #f2d74e;
        position: absolute;
        left: 50%;
        animation: confetti 5s ease-in-out -2s infinite;
        transform-origin: left top;
      }
      .confetti:nth-child(2) {
        background-color: #95c3de;
        left: 30%;
        animation-delay: -4s;
      }
      .confetti:nth-child(3) {
        background-color: #ff9a91;
        left: 70%;
        animation-delay: -1s;
      }
      .confetti:nth-child(4) {
        background-color: #f2d74e;
        left: 20%;
        animation-delay: -2s;
      }
      .confetti:nth-child(5) {
        background-color: #95c3de;
        left: 80%;
        animation-delay: -3s;
      }
      .confetti:nth-child(6) {
        background-color: #ff9a91;
        left: 40%;
        animation-delay: -4s;
      }
      .confetti:nth-child(7) {
        background-color: #f2d74e;
        left: 60%;
        animation-delay: -1s;
      }
      .confetti:nth-child(8) {
        background-color: #95c3de;
        left: 10%;
        animation-delay: -2s;
      }
      .confetti:nth-child(9) {
        background-color: #ff9a91;
        left: 90%;
        animation-delay: -3s;
      }
      .confetti:nth-child(10) {
        background-color: #f2d74e;
        left: 50%;
        animation-delay: -4s;
      }
      @keyframes confetti {
        0% { transform: rotateZ(15deg) rotateY(0deg) translate(0,0); }
        25% { transform: rotateZ(5deg) rotateY(360deg) translate(-5vw,20vh); }
        50% { transform: rotateZ(15deg) rotateY(720deg) translate(5vw,60vh); }
        75% { transform: rotateZ(5deg) rotateY(1080deg) translate(-10vw,80vh); }
        100% { transform: rotateZ(15deg) rotateY(1440deg) translate(10vw,110vh); }
      }
    `;
    document.head.appendChild(styleEl);
  } else {
    // Low score sad result
    resultEl.innerHTML = `
      <div class="low-score">
        <h2>üòî ‡≤á‡≤®‡≥ç‡≤®‡≥Ç ‡≤™‡≥ç‡≤∞‡≤Ø‡≤§‡≥ç‡≤®‡≤ø‡≤∏‡≤ø</h2>
        <p>‡≤®‡≥Ä‡≤µ‡≥Å ${quizData.length} ‡≤∞‡≤≤‡≥ç‡≤≤‡≤ø ${score} ‡≤Ö‡≤Ç‡≤ï‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤ó‡≤≥‡≤ø‡≤∏‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤ø</p>
      </div>
    `;
  }

  restartBtn.style.display = "block";
  restartBtn.addEventListener("click", restartQuiz);
}
